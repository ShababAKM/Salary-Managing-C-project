#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalaryManager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EmpployeeInfo")]
	public partial class EmpInfoLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCheckIn(CheckIn instance);
    partial void UpdateCheckIn(CheckIn instance);
    partial void DeleteCheckIn(CheckIn instance);
    partial void InsertEmpInformation(EmpInformation instance);
    partial void UpdateEmpInformation(EmpInformation instance);
    partial void DeleteEmpInformation(EmpInformation instance);
    partial void InsertLoans_Leave(Loans_Leave instance);
    partial void UpdateLoans_Leave(Loans_Leave instance);
    partial void DeleteLoans_Leave(Loans_Leave instance);
    partial void InsertSalaryG(SalaryG instance);
    partial void UpdateSalaryG(SalaryG instance);
    partial void DeleteSalaryG(SalaryG instance);
    partial void InserttaxAndSal(taxAndSal instance);
    partial void UpdatetaxAndSal(taxAndSal instance);
    partial void DeletetaxAndSal(taxAndSal instance);
    #endregion
		
		public EmpInfoLinqDataContext() : 
				base(global::SalaryManager.Properties.Settings.Default.EmpployeeInfoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EmpInfoLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmpInfoLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmpInfoLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmpInfoLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CheckIn> CheckIns
		{
			get
			{
				return this.GetTable<CheckIn>();
			}
		}
		
		public System.Data.Linq.Table<EmpInformation> EmpInformations
		{
			get
			{
				return this.GetTable<EmpInformation>();
			}
		}
		
		public System.Data.Linq.Table<Loans_Leave> Loans_Leaves
		{
			get
			{
				return this.GetTable<Loans_Leave>();
			}
		}
		
		public System.Data.Linq.Table<SalaryG> SalaryGs
		{
			get
			{
				return this.GetTable<SalaryG>();
			}
		}
		
		public System.Data.Linq.Table<taxAndSal> taxAndSals
		{
			get
			{
				return this.GetTable<taxAndSal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckIn")]
	public partial class CheckIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id2;
		
		private System.Nullable<int> _CheckinMark;
		
		private System.Nullable<int> _PCheckInMark;
		
		private string _CheckInCounter;
		
		private string _Password;
		
		private EntityRef<EmpInformation> _EmpInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId2Changing(string value);
    partial void OnId2Changed();
    partial void OnCheckinMarkChanging(System.Nullable<int> value);
    partial void OnCheckinMarkChanged();
    partial void OnPCheckInMarkChanging(System.Nullable<int> value);
    partial void OnPCheckInMarkChanged();
    partial void OnCheckInCounterChanging(string value);
    partial void OnCheckInCounterChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public CheckIn()
		{
			this._EmpInformation = default(EntityRef<EmpInformation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id2", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id2
		{
			get
			{
				return this._Id2;
			}
			set
			{
				if ((this._Id2 != value))
				{
					if (this._EmpInformation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId2Changing(value);
					this.SendPropertyChanging();
					this._Id2 = value;
					this.SendPropertyChanged("Id2");
					this.OnId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckinMark", DbType="Int")]
		public System.Nullable<int> CheckinMark
		{
			get
			{
				return this._CheckinMark;
			}
			set
			{
				if ((this._CheckinMark != value))
				{
					this.OnCheckinMarkChanging(value);
					this.SendPropertyChanging();
					this._CheckinMark = value;
					this.SendPropertyChanged("CheckinMark");
					this.OnCheckinMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCheckInMark", DbType="Int")]
		public System.Nullable<int> PCheckInMark
		{
			get
			{
				return this._PCheckInMark;
			}
			set
			{
				if ((this._PCheckInMark != value))
				{
					this.OnPCheckInMarkChanging(value);
					this.SendPropertyChanging();
					this._PCheckInMark = value;
					this.SendPropertyChanged("PCheckInMark");
					this.OnPCheckInMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckInCounter", DbType="VarChar(50)")]
		public string CheckInCounter
		{
			get
			{
				return this._CheckInCounter;
			}
			set
			{
				if ((this._CheckInCounter != value))
				{
					this.OnCheckInCounterChanging(value);
					this.SendPropertyChanging();
					this._CheckInCounter = value;
					this.SendPropertyChanged("CheckInCounter");
					this.OnCheckInCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpInformation_CheckIn", Storage="_EmpInformation", ThisKey="Id2", OtherKey="Id2", IsForeignKey=true)]
		public EmpInformation EmpInformation
		{
			get
			{
				return this._EmpInformation.Entity;
			}
			set
			{
				EmpInformation previousValue = this._EmpInformation.Entity;
				if (((previousValue != value) 
							|| (this._EmpInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmpInformation.Entity = null;
						previousValue.CheckIn = null;
					}
					this._EmpInformation.Entity = value;
					if ((value != null))
					{
						value.CheckIn = this;
						this._Id2 = value.Id2;
					}
					else
					{
						this._Id2 = default(string);
					}
					this.SendPropertyChanged("EmpInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpInformation")]
	public partial class EmpInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private char _Id1;
		
		private string _Id2;
		
		private string _Name;
		
		private string _Rank;
		
		private string _SalaryGrade;
		
		private string _PhoneNumber;
		
		private string _EmailAddress;
		
		private string _HomeAddress;
		
		private string _Password;
		
		private System.Data.Linq.Binary _Image;
		
		private string _DateofBirth;
		
		private string _Under;
		
		private EntityRef<CheckIn> _CheckIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId1Changing(char value);
    partial void OnId1Changed();
    partial void OnId2Changing(string value);
    partial void OnId2Changed();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRankChanging(string value);
    partial void OnRankChanged();
    partial void OnSalaryGradeChanging(string value);
    partial void OnSalaryGradeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnDateofBirthChanging(string value);
    partial void OnDateofBirthChanged();
    partial void OnUnderChanging(string value);
    partial void OnUnderChanged();
    #endregion
		
		public EmpInformation()
		{
			this._CheckIn = default(EntityRef<CheckIn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id1", DbType="Char(1) NOT NULL")]
		public char Id1
		{
			get
			{
				return this._Id1;
			}
			set
			{
				if ((this._Id1 != value))
				{
					this.OnId1Changing(value);
					this.SendPropertyChanging();
					this._Id1 = value;
					this.SendPropertyChanged("Id1");
					this.OnId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id2", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id2
		{
			get
			{
				return this._Id2;
			}
			set
			{
				if ((this._Id2 != value))
				{
					this.OnId2Changing(value);
					this.SendPropertyChanging();
					this._Id2 = value;
					this.SendPropertyChanged("Id2");
					this.OnId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryGrade", DbType="VarChar(50)")]
		public string SalaryGrade
		{
			get
			{
				return this._SalaryGrade;
			}
			set
			{
				if ((this._SalaryGrade != value))
				{
					this.OnSalaryGradeChanging(value);
					this.SendPropertyChanging();
					this._SalaryGrade = value;
					this.SendPropertyChanged("SalaryGrade");
					this.OnSalaryGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="VarChar(50)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this.OnHomeAddressChanging(value);
					this.SendPropertyChanging();
					this._HomeAddress = value;
					this.SendPropertyChanged("HomeAddress");
					this.OnHomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofBirth", DbType="VarChar(50)")]
		public string DateofBirth
		{
			get
			{
				return this._DateofBirth;
			}
			set
			{
				if ((this._DateofBirth != value))
				{
					this.OnDateofBirthChanging(value);
					this.SendPropertyChanging();
					this._DateofBirth = value;
					this.SendPropertyChanged("DateofBirth");
					this.OnDateofBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Under", DbType="VarChar(50)")]
		public string Under
		{
			get
			{
				return this._Under;
			}
			set
			{
				if ((this._Under != value))
				{
					this.OnUnderChanging(value);
					this.SendPropertyChanging();
					this._Under = value;
					this.SendPropertyChanged("Under");
					this.OnUnderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmpInformation_CheckIn", Storage="_CheckIn", ThisKey="Id2", OtherKey="Id2", IsUnique=true, IsForeignKey=false)]
		public CheckIn CheckIn
		{
			get
			{
				return this._CheckIn.Entity;
			}
			set
			{
				CheckIn previousValue = this._CheckIn.Entity;
				if (((previousValue != value) 
							|| (this._CheckIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CheckIn.Entity = null;
						previousValue.EmpInformation = null;
					}
					this._CheckIn.Entity = value;
					if ((value != null))
					{
						value.EmpInformation = this;
					}
					this.SendPropertyChanged("CheckIn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Loans&Leaves]")]
	public partial class Loans_Leave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id2;
		
		private System.Nullable<int> _LeaveDays;
		
		private System.Nullable<int> _LoanAmount;
		
		private System.Nullable<int> _PayAmount;
		
		private System.Nullable<int> _SavingsAccount;
		
		private System.Nullable<int> _Year;
		
		private string _DiscriptionL;
		
		private System.Nullable<int> _TotalLoan;
		
		private System.Nullable<int> _SellLeaveAmount;
		
		private string _LeaveF;
		
		private string _LeaveT;
		
		private System.Nullable<int> _LPay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId2Changing(string value);
    partial void OnId2Changed();
    partial void OnLeaveDaysChanging(System.Nullable<int> value);
    partial void OnLeaveDaysChanged();
    partial void OnLoanAmountChanging(System.Nullable<int> value);
    partial void OnLoanAmountChanged();
    partial void OnPayAmountChanging(System.Nullable<int> value);
    partial void OnPayAmountChanged();
    partial void OnSavingsAccountChanging(System.Nullable<int> value);
    partial void OnSavingsAccountChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnDiscriptionLChanging(string value);
    partial void OnDiscriptionLChanged();
    partial void OnTotalLoanChanging(System.Nullable<int> value);
    partial void OnTotalLoanChanged();
    partial void OnSellLeaveAmountChanging(System.Nullable<int> value);
    partial void OnSellLeaveAmountChanged();
    partial void OnLeaveFChanging(string value);
    partial void OnLeaveFChanged();
    partial void OnLeaveTChanging(string value);
    partial void OnLeaveTChanged();
    partial void OnLPayChanging(System.Nullable<int> value);
    partial void OnLPayChanged();
    #endregion
		
		public Loans_Leave()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id2", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id2
		{
			get
			{
				return this._Id2;
			}
			set
			{
				if ((this._Id2 != value))
				{
					this.OnId2Changing(value);
					this.SendPropertyChanging();
					this._Id2 = value;
					this.SendPropertyChanged("Id2");
					this.OnId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDays", DbType="Int")]
		public System.Nullable<int> LeaveDays
		{
			get
			{
				return this._LeaveDays;
			}
			set
			{
				if ((this._LeaveDays != value))
				{
					this.OnLeaveDaysChanging(value);
					this.SendPropertyChanging();
					this._LeaveDays = value;
					this.SendPropertyChanged("LeaveDays");
					this.OnLeaveDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanAmount", DbType="Int")]
		public System.Nullable<int> LoanAmount
		{
			get
			{
				return this._LoanAmount;
			}
			set
			{
				if ((this._LoanAmount != value))
				{
					this.OnLoanAmountChanging(value);
					this.SendPropertyChanging();
					this._LoanAmount = value;
					this.SendPropertyChanged("LoanAmount");
					this.OnLoanAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayAmount", DbType="Int")]
		public System.Nullable<int> PayAmount
		{
			get
			{
				return this._PayAmount;
			}
			set
			{
				if ((this._PayAmount != value))
				{
					this.OnPayAmountChanging(value);
					this.SendPropertyChanging();
					this._PayAmount = value;
					this.SendPropertyChanged("PayAmount");
					this.OnPayAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SavingsAccount", DbType="Int")]
		public System.Nullable<int> SavingsAccount
		{
			get
			{
				return this._SavingsAccount;
			}
			set
			{
				if ((this._SavingsAccount != value))
				{
					this.OnSavingsAccountChanging(value);
					this.SendPropertyChanging();
					this._SavingsAccount = value;
					this.SendPropertyChanged("SavingsAccount");
					this.OnSavingsAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscriptionL", DbType="VarChar(MAX)")]
		public string DiscriptionL
		{
			get
			{
				return this._DiscriptionL;
			}
			set
			{
				if ((this._DiscriptionL != value))
				{
					this.OnDiscriptionLChanging(value);
					this.SendPropertyChanging();
					this._DiscriptionL = value;
					this.SendPropertyChanged("DiscriptionL");
					this.OnDiscriptionLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLoan", DbType="Int")]
		public System.Nullable<int> TotalLoan
		{
			get
			{
				return this._TotalLoan;
			}
			set
			{
				if ((this._TotalLoan != value))
				{
					this.OnTotalLoanChanging(value);
					this.SendPropertyChanging();
					this._TotalLoan = value;
					this.SendPropertyChanged("TotalLoan");
					this.OnTotalLoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellLeaveAmount", DbType="Int")]
		public System.Nullable<int> SellLeaveAmount
		{
			get
			{
				return this._SellLeaveAmount;
			}
			set
			{
				if ((this._SellLeaveAmount != value))
				{
					this.OnSellLeaveAmountChanging(value);
					this.SendPropertyChanging();
					this._SellLeaveAmount = value;
					this.SendPropertyChanged("SellLeaveAmount");
					this.OnSellLeaveAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveF", DbType="VarChar(50)")]
		public string LeaveF
		{
			get
			{
				return this._LeaveF;
			}
			set
			{
				if ((this._LeaveF != value))
				{
					this.OnLeaveFChanging(value);
					this.SendPropertyChanging();
					this._LeaveF = value;
					this.SendPropertyChanged("LeaveF");
					this.OnLeaveFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveT", DbType="VarChar(50)")]
		public string LeaveT
		{
			get
			{
				return this._LeaveT;
			}
			set
			{
				if ((this._LeaveT != value))
				{
					this.OnLeaveTChanging(value);
					this.SendPropertyChanging();
					this._LeaveT = value;
					this.SendPropertyChanged("LeaveT");
					this.OnLeaveTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LPay", DbType="Int")]
		public System.Nullable<int> LPay
		{
			get
			{
				return this._LPay;
			}
			set
			{
				if ((this._LPay != value))
				{
					this.OnLPayChanging(value);
					this.SendPropertyChanging();
					this._LPay = value;
					this.SendPropertyChanged("LPay");
					this.OnLPayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SalaryG")]
	public partial class SalaryG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SalaryGrade;
		
		private System.Nullable<int> _HomeAl;
		
		private System.Nullable<int> _HealthAl;
		
		private System.Nullable<int> _Salary;
		
		private System.Nullable<int> _DayAl;
		
		private System.Nullable<int> _Bonus;
		
		private System.Nullable<int> _HomeAlp;
		
		private System.Nullable<int> _HealthAlp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalaryGradeChanging(string value);
    partial void OnSalaryGradeChanged();
    partial void OnHomeAlChanging(System.Nullable<int> value);
    partial void OnHomeAlChanged();
    partial void OnHealthAlChanging(System.Nullable<int> value);
    partial void OnHealthAlChanged();
    partial void OnSalaryChanging(System.Nullable<int> value);
    partial void OnSalaryChanged();
    partial void OnDayAlChanging(System.Nullable<int> value);
    partial void OnDayAlChanged();
    partial void OnBonusChanging(System.Nullable<int> value);
    partial void OnBonusChanged();
    partial void OnHomeAlpChanging(System.Nullable<int> value);
    partial void OnHomeAlpChanged();
    partial void OnHealthAlpChanging(System.Nullable<int> value);
    partial void OnHealthAlpChanged();
    #endregion
		
		public SalaryG()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryGrade", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SalaryGrade
		{
			get
			{
				return this._SalaryGrade;
			}
			set
			{
				if ((this._SalaryGrade != value))
				{
					this.OnSalaryGradeChanging(value);
					this.SendPropertyChanging();
					this._SalaryGrade = value;
					this.SendPropertyChanged("SalaryGrade");
					this.OnSalaryGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAl", DbType="Int")]
		public System.Nullable<int> HomeAl
		{
			get
			{
				return this._HomeAl;
			}
			set
			{
				if ((this._HomeAl != value))
				{
					this.OnHomeAlChanging(value);
					this.SendPropertyChanging();
					this._HomeAl = value;
					this.SendPropertyChanged("HomeAl");
					this.OnHomeAlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthAl", DbType="Int")]
		public System.Nullable<int> HealthAl
		{
			get
			{
				return this._HealthAl;
			}
			set
			{
				if ((this._HealthAl != value))
				{
					this.OnHealthAlChanging(value);
					this.SendPropertyChanging();
					this._HealthAl = value;
					this.SendPropertyChanged("HealthAl");
					this.OnHealthAlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Int")]
		public System.Nullable<int> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayAl", DbType="Int")]
		public System.Nullable<int> DayAl
		{
			get
			{
				return this._DayAl;
			}
			set
			{
				if ((this._DayAl != value))
				{
					this.OnDayAlChanging(value);
					this.SendPropertyChanging();
					this._DayAl = value;
					this.SendPropertyChanged("DayAl");
					this.OnDayAlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="Int")]
		public System.Nullable<int> Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this.OnBonusChanging(value);
					this.SendPropertyChanging();
					this._Bonus = value;
					this.SendPropertyChanged("Bonus");
					this.OnBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAlp", DbType="Int")]
		public System.Nullable<int> HomeAlp
		{
			get
			{
				return this._HomeAlp;
			}
			set
			{
				if ((this._HomeAlp != value))
				{
					this.OnHomeAlpChanging(value);
					this.SendPropertyChanging();
					this._HomeAlp = value;
					this.SendPropertyChanged("HomeAlp");
					this.OnHomeAlpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthAlp", DbType="Int")]
		public System.Nullable<int> HealthAlp
		{
			get
			{
				return this._HealthAlp;
			}
			set
			{
				if ((this._HealthAlp != value))
				{
					this.OnHealthAlpChanging(value);
					this.SendPropertyChanging();
					this._HealthAlp = value;
					this.SendPropertyChanged("HealthAlp");
					this.OnHealthAlpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.taxAndSal")]
	public partial class taxAndSal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id2;
		
		private System.Nullable<int> _PendingTax;
		
		private System.Nullable<int> _SalaryGrade;
		
		private System.Nullable<int> _Salary;
		
		private System.Nullable<int> _HomeAl;
		
		private System.Nullable<int> _HealthAl;
		
		private System.Nullable<int> _TravelAl;
		
		private System.Nullable<int> _DayAl;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<int> _Count;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId2Changing(string value);
    partial void OnId2Changed();
    partial void OnPendingTaxChanging(System.Nullable<int> value);
    partial void OnPendingTaxChanged();
    partial void OnSalaryGradeChanging(System.Nullable<int> value);
    partial void OnSalaryGradeChanged();
    partial void OnSalaryChanging(System.Nullable<int> value);
    partial void OnSalaryChanged();
    partial void OnHomeAlChanging(System.Nullable<int> value);
    partial void OnHomeAlChanged();
    partial void OnHealthAlChanging(System.Nullable<int> value);
    partial void OnHealthAlChanged();
    partial void OnTravelAlChanging(System.Nullable<int> value);
    partial void OnTravelAlChanged();
    partial void OnDayAlChanging(System.Nullable<int> value);
    partial void OnDayAlChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    #endregion
		
		public taxAndSal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id2", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id2
		{
			get
			{
				return this._Id2;
			}
			set
			{
				if ((this._Id2 != value))
				{
					this.OnId2Changing(value);
					this.SendPropertyChanging();
					this._Id2 = value;
					this.SendPropertyChanged("Id2");
					this.OnId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingTax", DbType="Int")]
		public System.Nullable<int> PendingTax
		{
			get
			{
				return this._PendingTax;
			}
			set
			{
				if ((this._PendingTax != value))
				{
					this.OnPendingTaxChanging(value);
					this.SendPropertyChanging();
					this._PendingTax = value;
					this.SendPropertyChanged("PendingTax");
					this.OnPendingTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryGrade", DbType="Int")]
		public System.Nullable<int> SalaryGrade
		{
			get
			{
				return this._SalaryGrade;
			}
			set
			{
				if ((this._SalaryGrade != value))
				{
					this.OnSalaryGradeChanging(value);
					this.SendPropertyChanging();
					this._SalaryGrade = value;
					this.SendPropertyChanged("SalaryGrade");
					this.OnSalaryGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Int")]
		public System.Nullable<int> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAl", DbType="Int")]
		public System.Nullable<int> HomeAl
		{
			get
			{
				return this._HomeAl;
			}
			set
			{
				if ((this._HomeAl != value))
				{
					this.OnHomeAlChanging(value);
					this.SendPropertyChanging();
					this._HomeAl = value;
					this.SendPropertyChanged("HomeAl");
					this.OnHomeAlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HealthAl", DbType="Int")]
		public System.Nullable<int> HealthAl
		{
			get
			{
				return this._HealthAl;
			}
			set
			{
				if ((this._HealthAl != value))
				{
					this.OnHealthAlChanging(value);
					this.SendPropertyChanging();
					this._HealthAl = value;
					this.SendPropertyChanged("HealthAl");
					this.OnHealthAlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelAl", DbType="Int")]
		public System.Nullable<int> TravelAl
		{
			get
			{
				return this._TravelAl;
			}
			set
			{
				if ((this._TravelAl != value))
				{
					this.OnTravelAlChanging(value);
					this.SendPropertyChanging();
					this._TravelAl = value;
					this.SendPropertyChanged("TravelAl");
					this.OnTravelAlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayAl", DbType="Int")]
		public System.Nullable<int> DayAl
		{
			get
			{
				return this._DayAl;
			}
			set
			{
				if ((this._DayAl != value))
				{
					this.OnDayAlChanging(value);
					this.SendPropertyChanging();
					this._DayAl = value;
					this.SendPropertyChanged("DayAl");
					this.OnDayAlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
